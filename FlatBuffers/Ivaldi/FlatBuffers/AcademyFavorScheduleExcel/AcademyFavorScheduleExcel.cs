// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Ivaldi.FlatBuffers.AcademyFavorScheduleExcel
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct AcademyFavorScheduleExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static AcademyFavorScheduleExcel GetRootAsAcademyFavorScheduleExcel(ByteBuffer _bb) { return GetRootAsAcademyFavorScheduleExcel(_bb, new AcademyFavorScheduleExcel()); }
  public static AcademyFavorScheduleExcel GetRootAsAcademyFavorScheduleExcel(ByteBuffer _bb, AcademyFavorScheduleExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AcademyFavorScheduleExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CharacterId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ScheduleGroupId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long OrderInGroup { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string Location { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocationBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetLocationBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetLocationArray() { return __p.__vector_as_array<byte>(12); }
  public uint LocalizeScenarioId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public long FavorRan { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long SecretStoneAmount { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ScenarioSriptGroupId { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int RewardParcelTypeLength { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RewardParcelIdLength { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RewardAmountLength { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Ivaldi.FlatBuffers.AcademyFavorScheduleExcel.AcademyFavorScheduleExcel> CreateAcademyFavorScheduleExcel(FlatBufferBuilder builder,
      long Id = 0,
      long CharacterId = 0,
      long ScheduleGroupId = 0,
      long OrderInGroup = 0,
      StringOffset LocationOffset = default(StringOffset),
      uint LocalizeScenarioId = 0,
      long FavorRan = 0,
      long SecretStoneAmount = 0,
      long ScenarioSriptGroupId = 0,
      int RewardParcelTypeLength = 0,
      int RewardParcelIdLength = 0,
      int RewardAmountLength = 0) {
    builder.StartTable(12);
    AcademyFavorScheduleExcel.AddScenarioSriptGroupId(builder, ScenarioSriptGroupId);
    AcademyFavorScheduleExcel.AddSecretStoneAmount(builder, SecretStoneAmount);
    AcademyFavorScheduleExcel.AddFavorRan(builder, FavorRan);
    AcademyFavorScheduleExcel.AddOrderInGroup(builder, OrderInGroup);
    AcademyFavorScheduleExcel.AddScheduleGroupId(builder, ScheduleGroupId);
    AcademyFavorScheduleExcel.AddCharacterId(builder, CharacterId);
    AcademyFavorScheduleExcel.AddId(builder, Id);
    AcademyFavorScheduleExcel.AddRewardAmountLength(builder, RewardAmountLength);
    AcademyFavorScheduleExcel.AddRewardParcelIdLength(builder, RewardParcelIdLength);
    AcademyFavorScheduleExcel.AddRewardParcelTypeLength(builder, RewardParcelTypeLength);
    AcademyFavorScheduleExcel.AddLocalizeScenarioId(builder, LocalizeScenarioId);
    AcademyFavorScheduleExcel.AddLocation(builder, LocationOffset);
    return AcademyFavorScheduleExcel.EndAcademyFavorScheduleExcel(builder);
  }

  public static void StartAcademyFavorScheduleExcel(FlatBufferBuilder builder) { builder.StartTable(12); }
  public static void AddId(FlatBufferBuilder builder, long id) { builder.AddLong(0, id, 0); }
  public static void AddCharacterId(FlatBufferBuilder builder, long characterId) { builder.AddLong(1, characterId, 0); }
  public static void AddScheduleGroupId(FlatBufferBuilder builder, long scheduleGroupId) { builder.AddLong(2, scheduleGroupId, 0); }
  public static void AddOrderInGroup(FlatBufferBuilder builder, long orderInGroup) { builder.AddLong(3, orderInGroup, 0); }
  public static void AddLocation(FlatBufferBuilder builder, StringOffset locationOffset) { builder.AddOffset(4, locationOffset.Value, 0); }
  public static void AddLocalizeScenarioId(FlatBufferBuilder builder, uint localizeScenarioId) { builder.AddUint(5, localizeScenarioId, 0); }
  public static void AddFavorRan(FlatBufferBuilder builder, long favorRan) { builder.AddLong(6, favorRan, 0); }
  public static void AddSecretStoneAmount(FlatBufferBuilder builder, long secretStoneAmount) { builder.AddLong(7, secretStoneAmount, 0); }
  public static void AddScenarioSriptGroupId(FlatBufferBuilder builder, long scenarioSriptGroupId) { builder.AddLong(8, scenarioSriptGroupId, 0); }
  public static void AddRewardParcelTypeLength(FlatBufferBuilder builder, int rewardParcelTypeLength) { builder.AddInt(9, rewardParcelTypeLength, 0); }
  public static void AddRewardParcelIdLength(FlatBufferBuilder builder, int rewardParcelIdLength) { builder.AddInt(10, rewardParcelIdLength, 0); }
  public static void AddRewardAmountLength(FlatBufferBuilder builder, int rewardAmountLength) { builder.AddInt(11, rewardAmountLength, 0); }
  public static Offset<Ivaldi.FlatBuffers.AcademyFavorScheduleExcel.AcademyFavorScheduleExcel> EndAcademyFavorScheduleExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Ivaldi.FlatBuffers.AcademyFavorScheduleExcel.AcademyFavorScheduleExcel>(o);
  }
}


static public class AcademyFavorScheduleExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*CharacterId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*ScheduleGroupId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*OrderInGroup*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 12 /*Location*/, false)
      && verifier.VerifyField(tablePos, 14 /*LocalizeScenarioId*/, 4 /*uint*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*FavorRan*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 18 /*SecretStoneAmount*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 20 /*ScenarioSriptGroupId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 22 /*RewardParcelTypeLength*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*RewardParcelIdLength*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 26 /*RewardAmountLength*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}

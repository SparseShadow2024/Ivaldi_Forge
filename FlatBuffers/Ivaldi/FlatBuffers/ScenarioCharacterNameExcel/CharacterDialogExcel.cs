// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Ivaldi.FlatBuffers.ScenarioCharacterNameExcel
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CharacterDialogExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static CharacterDialogExcel GetRootAsCharacterDialogExcel(ByteBuffer _bb) { return GetRootAsCharacterDialogExcel(_bb, new CharacterDialogExcel()); }
  public static CharacterDialogExcel GetRootAsCharacterDialogExcel(ByteBuffer _bb, CharacterDialogExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyCharacterDialogExcel(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, CharacterDialogExcelVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CharacterDialogExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long CharacterId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CostumeUniqueId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long DisplayOrder { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Ivaldi.FlatBuffers.Common.ProductionStep ProductionStep { get { int o = __p.__offset(10); return o != 0 ? (Ivaldi.FlatBuffers.Common.ProductionStep)__p.bb.GetInt(o + __p.bb_pos) : Ivaldi.FlatBuffers.Common.ProductionStep.ToDo; } }
  public Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCategory DialogCategory { get { int o = __p.__offset(12); return o != 0 ? (Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCategory)__p.bb.GetInt(o + __p.bb_pos) : Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCategory.Cafe; } }
  public Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCondition DialogCondition { get { int o = __p.__offset(14); return o != 0 ? (Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCondition)__p.bb.GetInt(o + __p.bb_pos) : Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCondition.Idle; } }
  public Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.Anniversary Anniversary { get { int o = __p.__offset(16); return o != 0 ? (Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.Anniversary)__p.bb.GetInt(o + __p.bb_pos) : Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.Anniversary.None; } }
  public string StartDate { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStartDateBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetStartDateBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetStartDateArray() { return __p.__vector_as_array<byte>(18); }
  public string EndDate { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEndDateBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetEndDateBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetEndDateArray() { return __p.__vector_as_array<byte>(20); }
  public long GroupId { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogType DialogType { get { int o = __p.__offset(24); return o != 0 ? (Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogType)__p.bb.GetInt(o + __p.bb_pos) : Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogType.Talk; } }
  public string ActionName { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetActionNameBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetActionNameBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetActionNameArray() { return __p.__vector_as_array<byte>(26); }
  public long Duration { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string AnimationName { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAnimationNameBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetAnimationNameBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetAnimationNameArray() { return __p.__vector_as_array<byte>(30); }
  public string LocalizeKR { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeKRBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetLocalizeKRBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetLocalizeKRArray() { return __p.__vector_as_array<byte>(32); }
  public string LocalizeJP { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeJPBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetLocalizeJPBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetLocalizeJPArray() { return __p.__vector_as_array<byte>(34); }
  public int VoiceIdLength { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool ApplyPosition { get { int o = __p.__offset(38); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public float PosX { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float PosY { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool CollectionVisible { get { int o = __p.__offset(44); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CVCollectionType CVCollectionType { get { int o = __p.__offset(46); return o != 0 ? (Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CVCollectionType)__p.bb.GetInt(o + __p.bb_pos) : Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CVCollectionType.CVNormal; } }
  public long UnlockFavorRank { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool UnlockEquipWeapon { get { int o = __p.__offset(50); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string LocalizeCVGroup { get { int o = __p.__offset(52); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeCVGroupBytes() { return __p.__vector_as_span<byte>(52, 1); }
#else
  public ArraySegment<byte>? GetLocalizeCVGroupBytes() { return __p.__vector_as_arraysegment(52); }
#endif
  public byte[] GetLocalizeCVGroupArray() { return __p.__vector_as_array<byte>(52); }

  public static Offset<Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CharacterDialogExcel> CreateCharacterDialogExcel(FlatBufferBuilder builder,
      long CharacterId = 0,
      long CostumeUniqueId = 0,
      long DisplayOrder = 0,
      Ivaldi.FlatBuffers.Common.ProductionStep ProductionStep = Ivaldi.FlatBuffers.Common.ProductionStep.ToDo,
      Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCategory DialogCategory = Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCategory.Cafe,
      Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCondition DialogCondition = Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCondition.Idle,
      Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.Anniversary Anniversary = Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.Anniversary.None,
      StringOffset StartDateOffset = default(StringOffset),
      StringOffset EndDateOffset = default(StringOffset),
      long GroupId = 0,
      Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogType DialogType = Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogType.Talk,
      StringOffset ActionNameOffset = default(StringOffset),
      long Duration = 0,
      StringOffset AnimationNameOffset = default(StringOffset),
      StringOffset LocalizeKROffset = default(StringOffset),
      StringOffset LocalizeJPOffset = default(StringOffset),
      int VoiceIdLength = 0,
      bool ApplyPosition = false,
      float PosX = 0.0f,
      float PosY = 0.0f,
      bool CollectionVisible = false,
      Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CVCollectionType CVCollectionType = Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CVCollectionType.CVNormal,
      long UnlockFavorRank = 0,
      bool UnlockEquipWeapon = false,
      StringOffset LocalizeCVGroupOffset = default(StringOffset)) {
    builder.StartTable(25);
    CharacterDialogExcel.AddUnlockFavorRank(builder, UnlockFavorRank);
    CharacterDialogExcel.AddDuration(builder, Duration);
    CharacterDialogExcel.AddGroupId(builder, GroupId);
    CharacterDialogExcel.AddDisplayOrder(builder, DisplayOrder);
    CharacterDialogExcel.AddCostumeUniqueId(builder, CostumeUniqueId);
    CharacterDialogExcel.AddCharacterId(builder, CharacterId);
    CharacterDialogExcel.AddLocalizeCVGroup(builder, LocalizeCVGroupOffset);
    CharacterDialogExcel.AddCVCollectionType(builder, CVCollectionType);
    CharacterDialogExcel.AddPosY(builder, PosY);
    CharacterDialogExcel.AddPosX(builder, PosX);
    CharacterDialogExcel.AddVoiceIdLength(builder, VoiceIdLength);
    CharacterDialogExcel.AddLocalizeJP(builder, LocalizeJPOffset);
    CharacterDialogExcel.AddLocalizeKR(builder, LocalizeKROffset);
    CharacterDialogExcel.AddAnimationName(builder, AnimationNameOffset);
    CharacterDialogExcel.AddActionName(builder, ActionNameOffset);
    CharacterDialogExcel.AddDialogType(builder, DialogType);
    CharacterDialogExcel.AddEndDate(builder, EndDateOffset);
    CharacterDialogExcel.AddStartDate(builder, StartDateOffset);
    CharacterDialogExcel.AddAnniversary(builder, Anniversary);
    CharacterDialogExcel.AddDialogCondition(builder, DialogCondition);
    CharacterDialogExcel.AddDialogCategory(builder, DialogCategory);
    CharacterDialogExcel.AddProductionStep(builder, ProductionStep);
    CharacterDialogExcel.AddUnlockEquipWeapon(builder, UnlockEquipWeapon);
    CharacterDialogExcel.AddCollectionVisible(builder, CollectionVisible);
    CharacterDialogExcel.AddApplyPosition(builder, ApplyPosition);
    return CharacterDialogExcel.EndCharacterDialogExcel(builder);
  }

  public static void StartCharacterDialogExcel(FlatBufferBuilder builder) { builder.StartTable(25); }
  public static void AddCharacterId(FlatBufferBuilder builder, long characterId) { builder.AddLong(0, characterId, 0); }
  public static void AddCostumeUniqueId(FlatBufferBuilder builder, long costumeUniqueId) { builder.AddLong(1, costumeUniqueId, 0); }
  public static void AddDisplayOrder(FlatBufferBuilder builder, long displayOrder) { builder.AddLong(2, displayOrder, 0); }
  public static void AddProductionStep(FlatBufferBuilder builder, Ivaldi.FlatBuffers.Common.ProductionStep productionStep) { builder.AddInt(3, (int)productionStep, 0); }
  public static void AddDialogCategory(FlatBufferBuilder builder, Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCategory dialogCategory) { builder.AddInt(4, (int)dialogCategory, 0); }
  public static void AddDialogCondition(FlatBufferBuilder builder, Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCondition dialogCondition) { builder.AddInt(5, (int)dialogCondition, 0); }
  public static void AddAnniversary(FlatBufferBuilder builder, Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.Anniversary anniversary) { builder.AddInt(6, (int)anniversary, 0); }
  public static void AddStartDate(FlatBufferBuilder builder, StringOffset startDateOffset) { builder.AddOffset(7, startDateOffset.Value, 0); }
  public static void AddEndDate(FlatBufferBuilder builder, StringOffset endDateOffset) { builder.AddOffset(8, endDateOffset.Value, 0); }
  public static void AddGroupId(FlatBufferBuilder builder, long groupId) { builder.AddLong(9, groupId, 0); }
  public static void AddDialogType(FlatBufferBuilder builder, Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogType dialogType) { builder.AddInt(10, (int)dialogType, 0); }
  public static void AddActionName(FlatBufferBuilder builder, StringOffset actionNameOffset) { builder.AddOffset(11, actionNameOffset.Value, 0); }
  public static void AddDuration(FlatBufferBuilder builder, long duration) { builder.AddLong(12, duration, 0); }
  public static void AddAnimationName(FlatBufferBuilder builder, StringOffset animationNameOffset) { builder.AddOffset(13, animationNameOffset.Value, 0); }
  public static void AddLocalizeKR(FlatBufferBuilder builder, StringOffset localizeKROffset) { builder.AddOffset(14, localizeKROffset.Value, 0); }
  public static void AddLocalizeJP(FlatBufferBuilder builder, StringOffset localizeJPOffset) { builder.AddOffset(15, localizeJPOffset.Value, 0); }
  public static void AddVoiceIdLength(FlatBufferBuilder builder, int voiceIdLength) { builder.AddInt(16, voiceIdLength, 0); }
  public static void AddApplyPosition(FlatBufferBuilder builder, bool applyPosition) { builder.AddBool(17, applyPosition, false); }
  public static void AddPosX(FlatBufferBuilder builder, float posX) { builder.AddFloat(18, posX, 0.0f); }
  public static void AddPosY(FlatBufferBuilder builder, float posY) { builder.AddFloat(19, posY, 0.0f); }
  public static void AddCollectionVisible(FlatBufferBuilder builder, bool collectionVisible) { builder.AddBool(20, collectionVisible, false); }
  public static void AddCVCollectionType(FlatBufferBuilder builder, Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CVCollectionType cVCollectionType) { builder.AddInt(21, (int)cVCollectionType, 0); }
  public static void AddUnlockFavorRank(FlatBufferBuilder builder, long unlockFavorRank) { builder.AddLong(22, unlockFavorRank, 0); }
  public static void AddUnlockEquipWeapon(FlatBufferBuilder builder, bool unlockEquipWeapon) { builder.AddBool(23, unlockEquipWeapon, false); }
  public static void AddLocalizeCVGroup(FlatBufferBuilder builder, StringOffset localizeCVGroupOffset) { builder.AddOffset(24, localizeCVGroupOffset.Value, 0); }
  public static Offset<Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CharacterDialogExcel> EndCharacterDialogExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CharacterDialogExcel>(o);
  }
  public static void FinishCharacterDialogExcelBuffer(FlatBufferBuilder builder, Offset<Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CharacterDialogExcel> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedCharacterDialogExcelBuffer(FlatBufferBuilder builder, Offset<Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CharacterDialogExcel> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class CharacterDialogExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*CharacterId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*CostumeUniqueId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*DisplayOrder*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*ProductionStep*/, 4 /*Ivaldi.FlatBuffers.Common.ProductionStep*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*DialogCategory*/, 4 /*Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCategory*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*DialogCondition*/, 4 /*Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogCondition*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*Anniversary*/, 4 /*Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.Anniversary*/, 4, false)
      && verifier.VerifyString(tablePos, 18 /*StartDate*/, false)
      && verifier.VerifyString(tablePos, 20 /*EndDate*/, false)
      && verifier.VerifyField(tablePos, 22 /*GroupId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 24 /*DialogType*/, 4 /*Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.DialogType*/, 4, false)
      && verifier.VerifyString(tablePos, 26 /*ActionName*/, false)
      && verifier.VerifyField(tablePos, 28 /*Duration*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 30 /*AnimationName*/, false)
      && verifier.VerifyString(tablePos, 32 /*LocalizeKR*/, false)
      && verifier.VerifyString(tablePos, 34 /*LocalizeJP*/, false)
      && verifier.VerifyField(tablePos, 36 /*VoiceIdLength*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 38 /*ApplyPosition*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 40 /*PosX*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 42 /*PosY*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 44 /*CollectionVisible*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 46 /*CVCollectionType*/, 4 /*Ivaldi.FlatBuffers.ScenarioCharacterNameExcel.CVCollectionType*/, 4, false)
      && verifier.VerifyField(tablePos, 48 /*UnlockFavorRank*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 50 /*UnlockEquipWeapon*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 52 /*LocalizeCVGroup*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
